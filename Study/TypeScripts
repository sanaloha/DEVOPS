TypeScripts
===========================
Source: Udemy
Understanding TypeScript
By the numbers
Lectures: 138
Video: 7 hours
Skill level: All Levels
Description
Most People know TypeScript from Angular 2. It's the Language you have to use there, right?
It's more than that! 
Learn what TypeScript is, why it really is a powerful Addition to JavaScript, what its Features are and how to use it! And whilst doing so, also understand what you're actually doing in your Angular 2 Code.
This Course takes you from the very Basics and its most important Feature (Types!) to the Point where you're able to use TypeScript in any of your Projects. ReactJS Projects included!
As TypeScript is developed by Microsoft and strongly advertised used by Angular 2 (Google), it's here to stay. 
Gain an Edge today and be amongst the First to really understand TypeScript!
A Journey into the Future
As TypeScript code can be compiled to ES5, you'll be amazed by the many next-gen Features you can start using Today. Be it ES6 Features like Destructuring or Arrow Functions, Decorators, Generics and Interfaces or Modules - TypeScript has them all!
In this Course, we'll not stop after the Basics. You will learn about more advanced Features and also how to set up Workflows with TypeScript. This includes a TypeScript-only Workflow as well as Workflows using Gulp or Webpack.
You'll also learn that you're not limited to Angular 2 or plain JavaScript/ TypeScript Projects. A complete Module covers how to use TypeScript with ReactJS to benefit from its Features, there, too.
Practice what you Learn
Watching Videos is a great Way to Learn. And to a lot of Students, it's the best Way. If you also want to practice the Things you learn, this Course offers you Exercises (and Solutions) in many of the Course Modules.
So much Content!
I'm not a Fan of these Courses which teach you the Basics and then leave you alone. In this Course you'll get insights into:
Types and how to use them
How the TypeScript Compiler works
ES6 Features in TypeScript
Classes in TypeScript
Namespaces and Modules
Interfaces
Generics
Decorators
How to integrate Third-Party JavaScript Libraries into your TypeScript Project
How to integrate TypeScript into your Gulp or Webpack Workflow
Or how to set up a plain-TypeScript Workflow
How to use TypeScript together with ReactJS
What are the requirements?

JavaScript Knowledge is required, though you don't need to be an Expert
OOP Experience is a Plus but not required
ES6 Knowledge is a Plus but not required
What am I going to get from this course?

Use TypeScript and its Features like Types, ES6 Support, Classes, Modules, Interfaces and much more in any of their Projects
Understand what TypeScript really is about and how it works
Why TypeScript offers a real advantage over vanilla JavaScript
What is the target audience?

This Course is for every Student who wants to extend his Horizon beyond vanilla JavaScript
Everyone learning Angular 2 should definitely understand how TypeScript works
====================================================
Maximilian Schwarzmüller
Professional Web Developer and Instructor
Experience as (Web) Developer

Starting out at the age of 13 I never stopped learning new programming skills and languages. Early I started creating websites for friends and just for fun as well. Besides web development I also explored Python and other non-web-only languages. This passion has since lasted and lead to my decision of working as a freelance web developer and consultant. The success and fun I have in this job is immense and really keeps that passion burningly alive.
Starting web development on the backend (PHP with Laravel, NodeJS, Python) I also became more and more of a frontend developer using modern frameworks like React, Angular or VueJS 2 in a lot of projects. I love both worlds nowadays!
As a self-taught developer I had the chance to broaden my horizon by studying Business Administration where I hold a Master's degree. That enabled me to work in a major strategy consultancy as well as a bank. While learning, that I enjoy development more than these fields, the time in this sector greatly improved my overall experience and skills.
Experience as Instructor
As a self-taught professional I really know the hard parts and the difficult topics when learning new or improving on already-known languages. This background and experience enables me to focus on the most relevant key concepts and topics. My track record of many 5-star rated courses, more than 200.000 students on Udemy as well as a successful YouTube channel is the best proof for that.
Whether working as development instructor or teaching Business Administration I always received great feedback. The most rewarding experience is to see how people find new, better jobs, build awesome web applications, acquire amazing projects or simply enjoy their hobby with the help of my content.
=====================================================
====================================================
URL: typescriptlang.org
courseversion 1.8
current version typescript2.9 is available
project folder: C:\Users\311832\Desktop\Gctms\Project\typescript

Others
1) Node.js 6.5 we have node v9.5.0, npm V5.6.0
Setup:
1) install globally using npm
> npm -g install typescript
added typescript@2.9.2

2) download the project COURSE WORKSPACE
open terminal > npm init
lite-server 2.2.2

--TypeScript and ES6
Not necessarily all ES6 Features are supported by TypeScript, but quite a lot of them are.

The following Compatibly Chart helps you find out if you're favorite Feature is supported: 
http://kangax.github.io/compat-table/es6/

--------------------------------------------------------

--------------------------------------------------------
Decorators: Are functions, one can attach to classes functions, methods, properties
.d.ts files
Manually download type script definition files
google out with definitelytyped jquery
npm install -g typings
typings install dt~jquery --globally --save
--Easier type management with typescript2.0
	-remove the typings folder previously created
	-npm install --save-dev @types/jquery
------Using tsc and tsc config
>tsc -w for watch mode
---tsconfig.json
>tsc --init
When one pass file name to compile... tsconfig file doesnot run in this case.
so one needs to provide compiler option explicitely as
> tsc app.ts --sourceMap

>tsc -p config/tsconfig.json ... in case tsconfig is in the config folder other than root.

----Adding type script into Gulp Workflow
combine ts with gulp
> npm install --save-dev gulp gulp-typescript

check about gulp inside npmjs.com

-----Working with Webpack 4+
If you're using Webpack 4.x (check the package.json file to find out which version was installed), you'll need a slightly different setup than shown in the next lecture.

Here are the adjustments you'll have to put into place:

1. Change loaders to rules.

2. In extensions[0] to "*" from "".

It's also suggested to keep the filename as ./bundle.js as a dist folder is added automatically.

module.exports = {
    entry:"./src/app.ts",
    output: {
        filename:"./bundle.js"
    },
    devtool:"source-map",
    resolve: {
        extensions: ["*",".ts",".tsx",".js"]
    },
    module:{
        rules: [
            {test:/\.tsx?$/, loader:"ts-loader"}
        ]
    }
};
When running Webpack, you probably get an error:

The CLI moved into a separate package: webpack-cli.
Please install 'webpack-cli' in addition to webpack itself to use the CLI.
-> When using npm: npm install webpack-cli -D
-> When using yarn: yarn add webpack-cli -D
Simply install webpack-cli, thereafter it should work:
npm install webpack-cli --save-dev


> npm install --save-dev webpack ts-loader
It's a loader or you will use or you can use in web peg to compile type script code.
====================
----Use with React js

===============End

Further Resources
Section 13, Lecture 138
The official TypeScript Documentation is actually really great, so definitely have a look at it: 
http://www.typescriptlang.org/

Want to use many ES6 Features? Check the Compatibility Chart: http://kangax.github.io/compat-table/es6/

Want to learn more about TypeScript and Metadata? Scroll to the very bottom of this 
Article: https://www.typescriptlang.org/docs/handbook/decorators.html

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
Section 1 Getting Started
---Introduction
	-http://www.typescriptlang.org/
	-check play ground http://www.typescriptlang.org/play/index.html
---Installing typescript
	--install using npm
		npm -g install typescript
---Using Type Script
				--Create index.html
				--create script.ts and copy code from playfround and paste here
				Let's now finally compile our file by navigating into this folder which holds the script RTX file and
				then run TMC which is Commander whaleboat once we install typescript as we did before which runs Tich types.
				Good compiler and then passing the file we want to compile. Please take this script out to use file and compile it to Javascript.

In this case it's a script dot TS with that command we're telling typescript.
---Setting up Workspace
	-C:\Users\311832\Desktop\Gctms\Project\typescript\Course Workspace
	-IDE Web Storm, 
	>npm init
	
	And also in this video I'm going to add a few packets just Tudor's Well full to this project I simply
	do set is under control.NPM but running NPM it inside of his folder. Now that prompts me a couple of questions here and I just hit enter all the time since the defaults
	are fine for me and it will create this packaged Jason File here.
	something like that.
	And while it's really lean you get the dependencies indexed dependencies nodes here which will basically, save all the dependencies you will use in your project.
	And one dependency and that means package.
	-install lite server
		-npm install lite-server --sav-dev
		
		>tsc --init
		As for running tier C app dot TS but it would be more convenient if I could only run TSC and it would
		automatically look for all the times called files and compiled them.I can do this by first running TSC minus my knees and that to not only put this folder under control
		of NPM which we did before with Geminid but now also to put it under control of typescript so to say this will in the end create a conflict adjacent file which tells typescript hey this folder here is
		of typescript project by running TSC.
		
	
		
		
	


