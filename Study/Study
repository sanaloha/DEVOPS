1. Spring MVC
2. Devops
3. Nodejs 9.5.0, Angular js(https://angular.io)
	-Node.js command prompt
	-node.js 9.5.0 (X64) and npm
		-npm -version 5.6.0
	-Angular CLI
	-Angular IDE
	-Visual Studio Code 1.2
4. Microservices
5. Cloud
	-AWS
	-Spring Cloud
	-Spring boot
6. UML Diagrams
7. Class and Sequence Diagram
8. How to create ITCP.
9. Editors
	-Sublime for angular
	-Visual Studio Code
	-Atom
	-Brackets
	-Storm
10. Design Patterns
11. NoSQL
	-Couchbase
	-MonogDB
12. MEAN(MONGO DB, EXPRESS, ANGULAR and NODE JS) -- mean.io
13) Kafka
14) Graphna
15) Kubernetes
https://www.edureka.co/blog/what-is-microservices/ 
https://www.youtube.com/watch?v=gfWr2_H39N0&list=PL9ooVrP1hQOEW2uMfPJ3TMmVq7W2okO6U 
===========================================================
coderanch.com
javabrains
stacktrace.com
mkyong
tutorialpoints
geeksforgeeks.org
github.com
=============================================================
http://localhost:4200
=========URLS================================================
nodejs.org
angular.io
getbootstrap.com
developer.mozila.org
mongoosejs.com
draw.io
atom.io
https://www.sublimetext.com/3 
https://aws.amazon.com/getting-started/videos/
https://www.concretepage.com/angular-2/angular-2-4-angular-ide-eclipse-hello-world-example
https://www.smashingmagazine.com/2012/06/all-about-unicode-utf8-character-sets/
https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/general-info/ee330736(v=vs.85)#websocket_maxconn
https://codereview.stackexchange.com/questions/133058/print-max-occurring-character-in-a-string
http://api.jquery.com/jquery.ajax/
http://www.whatismyproxy.com/
www.hibernate.org/validator
http://search.maven.org
https://github.com/FasterXML/jackson-databind
--Json place holder fake json database site
https;//jsonplaceholder.typicode.com
https://www.edureka.co/blog/interview-questions/spring-interview-questions/
https://blog.keen.io/architecture-of-giants-data-stacks-at-facebook-netflix-airbnb-and-pinterest-9b7cd881af54

==============================================================
March 27======================================================
Study:
Microservices
	Monolitihic applications using webservers
		-Quartz Job
		-Overloaded server, overloaded IDE, difficult to scale, cache and memory issues, technology stack
-synchronous protocols such as HTTP/REST or asynchronous protocols such as AMQP. 
-Each service has its own database in order to be decoupled from other services. 
Data consistency between services is maintained using the Saga pattern
-ACID Transactions: What are Acid Transactions?
-Difference between SAGA and 2 PC
-2 PC is nothing but 2 phase commits
-Two Phase locking protocol
-http/rest with json
March-29=================================================
https://aws.amazon.com/getting-started/videos/
AWS SDK for JavaScript in the Browser
	-Direct calls to AWS services mean no server-side code and no need to configure application servers.
-Dockers or Dockers containers
-Microservices in docker containers
-eleven nine durability
Angular: Visual Studio
====================================
########Apr-09 Angular
https://www.concretepage.com/angular-2/angular-2-4-angular-ide-eclipse-hello-world-example
https://www.sublimetext.com/3 
Steps
1) Open node.js command and type
	npm install -g angular-ide
	
3) Run the below command
	Install angular IDE
	ngide install C:\Users\311832\Desktop\Gctms\Angular\IDE
	
4) go to C:\Users\311832\Desktop\Gctms\Angular\CLI
	https://code.visualstudio.com/docs/nodejs/angular-tutorial
	npm install -g @angular/cli
	
5) Create new project
	my-app is the name of the folder for your application. This may take a few minutes to create the Angular application in TypeScript and install its dependencies.
	ng new my-app
	
6) Let's quickly run our Angular application by navigating to the new folder and typing ng serve to start the web server and open the application in a browser:
	cd my-app
	ng serve
7) You should see "Welcome to app!!" on http://localhost:4200 in your browser. We'll leave the web server running while we look at the application with VS Code.
	
8) To open your Angular application in VS Code, open another terminal (or command prompt) and navigate to the my-app folder and type code .:
cd my-app
code .
9) Debugger Configuration

10) https://angular.io/tutorial
https://angular.io/tutorial/toh-pt4
Every component must be declared in exactly one NgModule.
Summary:
	Use the CLI to create a second HeroesComponent.
	Displayed the HeroesComponent by adding it to the AppComponent shell.
	Applied the UppercasePipe to format the name.
	Used two-way data binding with the ngModel directive.
	Learned about the AppModule.
	Imported the FormsModule in the AppModule so that Angular would recognize and apply the ngModel directive.
	Learned the importance of declaring components in the AppModule and appreciated that the CLI declared it for you.
======================================================
######################Apr-13
Java Memory
Process Memory = Java Object Heap + Everything else
Java Object Heap = Young Generation(33% of total heap) + Old Generation
Young Generation =  All new Objects are created here
Old Generation = All the objects that survived one or more GC cycle getting stored here.
Young Generation = Eden Space(New Objects 2 mb default) + Survivior Space(TO|FROM 64 kb default)

###################################Apr-19
Computers only deal in numbers and not letters, so it’s important that all computers agree on which numbers represent which letters.
In the 1960s the American Standards Association created a 7-bit encoding called the American Standard Code for Information Interchange (ASCII).
But the new fangled microprocessors of the 1970s preferred to work with powers of 2. They could process 8 bits at a time and so used 8 bits 
(aka a byte or octet) to store each character, giving 256 possible values.
An 8 bit character can store a number up to 255, but ASCII only assigns up to 127. The other values from 128 to 255 are spare.
In the late 1990s, an attempt at standardization was made. Fifteen different 8 bit character sets were created to cover many different alphabets
such as Cyrillic, Arabic, Hebrew, Turkish, and Thai. They are called ISO-8859-1 up to ISO-8859-16 (number 12 was abandoned). In the Cyrillic 
ISO-8859-5, 224 represents the letter ?, and ? is at 207.

https://www.smashingmagazine.com/2012/06/all-about-unicode-utf8-character-sets/
UTF-8 Unicode Transformation Format
https://seclab.stanford.edu/websec/csrf/csrf.pdf
=============================================================
Edureka
Note that these Unicode code points are officially written in hexadecimal preceded by U+.
So the Unicode code point H is usually written as U+0048 rather than 72 (to convert from hexadecimal to decimal: 4*16+8=72).
Unicode Inside The Browser Link
Unicode does not fit into 8 bits, not even into 16. Although only 110,116 code points are in use, it has the capability to define up to 1,114,112 of
them, which would require 21 bits. However, computers have advanced since the 1970s. An 8 bit microprocessor is a bit out of date. New computers now
have 64 bit processors, so why can’t we move beyond an 8 bit character and into a 32 bit or 64 bit character?
So you still need a way to make 110,000 Unicode code points fit into just 8 bits.

There have been several attempts to solve this problem such as UCS2 and UTF-16.
But the winner in recent years is UTF-8, which stands for Universal Character Set Transformation Format 8 bit.
UTF-8 treats numbers 0-127 as ASCII, 192-247 as Shift keys, and 128-192 as the key to be shifted. For instance,
characters 208 and 209 shift you into the Cyrillic range. 208 followed by 175 is character 1071, the Cyrillic ?. The exact calculation is 
(208%32)*64 + (175%64) = 1071. Characters 224-239 are like a double shift. 226 followed by 190 and then 128 is character 12160: ?. 240 and over is 
a triple shift.

https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/general-info/ee330736(v=vs.85)#websocket_maxconn
https://codereview.stackexchange.com/questions/133058/print-max-occurring-character-in-a-string
========================================================================================================
The java.util.Queue is a subtype of java.util.Collection interface. It is an ordered list of objects with its use limited to inserting elements at
the end of list and deleting elements from the start of list i.e. it follows FIFO principle.
Since it is an interface, we need a concrete class during its declaration. There are many ways to initialize a Queue object, most common being-

1. As a Priority Queue
2. As a LinkedList
Please note that both the implementations are not thread safe. PriorityBlockingQueue is one alternative implementation if you need a thread safe
implementation.

Operations on Queue :

Add()-Adds an element at the tail of queue. More specifically, at the last of linkedlist if it is used, or according to the priority in case of
priority queue implementation.
peek()-To view the head of queue without removing it. Returns null if queue is empty.
element()-Similar to peek(). Throws NoSuchElementException if queue is empty.
remove()-Removes and returns the head of the queue. Throws NoSuchElementException when queue is impty.
poll()-Removes and returns the head of the queue. Returns null if queue is empty.
Since it is a subtype of Collections class, it inherits all the methods of it namely size(), isEmpty(), contains() etc.

==Stack implementation

1) Create a stack with Add and Remove functionality
2) Declare an array with specified length
3) create a function add, which will check of the stack or arraysize is full
4) Create a function remove which will remove the latest element inserted, or last element of the array.
Inferior Datastructure

============================================May 5
https://getbootstrap.com/docs/3.3/examples/starter-template

Node + Express
mongoosejs.com
mongo db compass
Singleton Questions
New Features in Java 8 and Java 9
codevenkat
What is double checked locking
http://javarevisited.blogspot.in/2011/03/10-interview-questions-on-singleton.html

How to create immutable classes
Singleton pattern is used for logging, drivers objects, caching and thread pool.
Singleton design pattern is used in core java classes also, for example java.lang.Runtime, java.awt.Desktop.

Cloning Deep Copy vs Shallow copy

Resume
Enum Exmple
======================================
Spring boot

https://www.youtube.com/watch?v=msXL2oDexqw&index=0&list=PLmbC-xnvykcghOSOJ1ZF6ja3aOgZAgaMO
Can you please evaluate - Monitoring spring boot applications with TICK stack - 
https://aboullaite.me/spring-boot-metrics-monitoring-using-tick-stack/
https://www.sanfoundry.com/java-program-implement-singly-linked-list/
--way to test rest request
Add chrome extension postman
--Ways to start project
	-Spring Initializer at start.spring.io, it provide a visual way of creating spring project, loaded with various options.
	-CLI - command line initializer
	
$JAVA_HOME/lib/security/cacerts),
http://www.whatismyproxy.com/
Using cntlm (cntlm.sourceforge.net) as proposed by Kris De Volder did the trick. The problem seems to be related to the direct NTML proxy access. 
When installing (and configuring) cntml on the machine and pointing the GGTS network settings to this proxy tunnel, everything works just fine. 
This seems to be a bug in the current GGTS release though, as an older version of STS is still able to connect to our proxy without problems.

You can try out this fix from the snapshot update site:
http://dist.springsource.com/snapshot/TOOLS/eclipse-integration-commons/nightly/e4.4

Paste this link in the "Work With" box for the "Help >> Install New Software" dialog. 
Then install the dashboard component from there to replace your current version of dashboard.

A word of caution. Installing this snapshot has some potential of breaking your STS release version. 
I think the risk is small given that dashboard is a pretty independent component.

prompt> cd C:\
prompt> "%JAVA_HOME%"\bin\jar xf \full…path…to\springsource-tool-suite-2.3.0.RELEASE-e3.4-win32.zip

datatables
jsonlint
####################################################################################################
Java5
Generics
Static import
for in
Varargs
autoboxing/unboxing
Annotations
The important features of JavaSE 8 are lambda expressions, methods references, default methods, functional interface, java 8 date/time, stream classes etc.
Lambda Iterate, filter and extract data
https://www.javatpoint.com/New-features-in-java

OBS Recorder: Open BroadCaster Software
GDPR: General Data Protection

what is IBM IAX?
https://www.geeksforgeeks.org/layers-osi-model/

dns resolution process
Networking layers
Socket programming
https://www.geeksforgeeks.org/basics-computer-networking/

==============Udemy
shri.rsw@gmail.com/Udemy@2018
aviraj.chavan@gmail.com
udemy@gmail
sanjaypatilwork@gmail.com
Prabhu123

Socket Programmimg
3d Objects

http://api.jquery.com/jquery.ajax/
https://datatables.net/
tropical, islands
ClassPathXmlApplicationContext
=======================
Annotations:
Are metadata about the class, just like marker interfaces

-Scan : Spring scan the java classes for the annotations. inside the bean tab use tag context: component-scan base-package
-Register: Register the beans in a bean container. Need to use @Component annotation provided with the bean id
-Get 
https://repo.spring.io/release/org/springframework/spring/

pihu
pippy
A B C D E F G H I J K L
MNKJUILVY Z
a b c d e f g h i j k l 
m n o p q r s t u v w x 
y z
BAZDLPHOQWX
===================
Front Controller: DispatherServlet
Delegate request to other item. as a developer u would develop model and view
How to configure the Spring Dispatcher Servlet using all Java Code (no xml)?
Answer:
The Spring documentation covers this process:
https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#mvc-container-config

Step 1: (open the CMD command)

C:\Users\username>netstat -o -n -a | findstr 0.0:8080

TCP 0.0.0.0:3000 0.0.0.0:0 LISTENING 3116

Now , we can see that LISTENING port is 3116 for 8080 ,
We need to kill 3116 now

Step 2:-
C:\Users\username>taskkill /F /PID 3116
Step 3: Go to Eclipse and start Server , it will run

Spring validation form validation
www.hibernate.org/validator

download the jar files a
Add jar files to ur project
Form Validation for required fields

Create fields 

1) firstName Make it required in the customer class using annotation 
@NotNull(message="last name is required")
@size(min=1, message="At least one character is required")
private String lastName;

2) Show the error in HTML page.
	-need some tags to show this validation messages
	-use the tag <form:errors path="lastName">
	
3) Update the controller class to apply validation on the customer object
	-using @Valid annotation on customer objects.
	-Use the BindingResult object to store the result, if it has the errors control the flows.

When performing Spring MVC validation, the location of the BindingResult parameter is very important. In the method signature, the BindingResult parameter must immediately after the model attribute. 

If you place it in any other location, Spring MVC validation will not work as desired. In fact, your validation rules will be ignored.

        @RequestMapping("/processForm")
        public String processForm(
                @Valid @ModelAttribute("customer") Customer theCustomer,
                BindingResult theBindingResult) {
            ...            
        }
	The Errors or BindingResult parameters have to follow the model object that is being
	bound immediately ...	
	Source: https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#mvc-ann-methods

##Spring MVC Validation using @initBinder
work as a preprocessor, processes each request before the controller

docs.oracle.com/javase/tutorial/essential/regex/
Custom Validation
1) Create annotation @UserDefinedName 
2) Create a valdator class to put validations or cutom logics
constraintvalidator
===============================================
Hibernate 5.2
Persisting or saving java objects into DB handles all the low level sql
provides Object to Relational Mapping ORM 
java class to be mapped with database table
	-one to one mapping to the columns of the table
How to save object and how to get the object
int theID = session.save(student)
session.get(Student.class,theID)
session.createQuery();
query.getList();
hibernate query language
lot of low level jdbc code is redundent Underlying jdbc is there for hibernate
in the background jdbc is used.
=========================================
dev.mysql.com/downloads
mysqlserver5.6 hibernate.org
hibernate5.2 works with java8
add hibernate config file annotate java class
==========================================================
Node is a javascript runtime that uses the V8 engine
V8 Engine: Open source javascript engine, written in c++;
==========================================================
Map class to Table
@Entity
@Table(name="Student")

Map Fields to Columns	
@Id
@Column(name="first_name")
Hibernate cascadetypes?
==========================================
http://search.maven.org
bcrypt algorith
brute force attack
luv2code.com/why-bcrypt
luv2code.com/password-hashing-best-practices
Spring-Rest
openweathermap.org
www.programmable.org

WUUniversity
=================================
https://github.com/FasterXML/jackson-databind
com.fasterxml.jackson.databind
https://www.edureka.co/blog/interview-questions/spring-interview-questions/

#####################################################
MSBS: Money Service Business
FinCEN: Financial Crimes Enforcement Network
FLA: Front Line Associates

STRIVES
COMPLICIT
CCB Courtesy Call Back
UDAP: Unfair, Deceptive, Abusive Acts and Prcatices
OFAC: Office of foreign access control
enforcement
===============Spring
File: applicationContext.xml
Add the following lines:
    <context:property-placeholder location="classpath:sport.properties"/>  
This should appear just after the <context:component-scan .../> line

3. Inject the properties values into your Swim Coach: SwimCoach.java
@Value("${foo.email}")
private String email;
    
@Value("${foo.team}")
private String team;
---

DOWNLOAD FULL SOURCE CODE
You can download entire code from here:
- http://www.luv2code.com/downloads/spring-hibernate/spring-props-annotation-demo.zip
=========================================================================
IOC using java classes

1) Create a java class and annotate as @Configuration
2) Add component scan support optional
@ComponentScan
3) Read Spring java configuration class
4) Retrieve bean from spring container
======Java-9 Feature
Jshell called 
Read-Eval-Print-Loop
breakpoints
@media(min-length: #899)
body{
background: yellow
}

======================================
1) Data Structures
2) Spring
3) Struts
4) Javascript and jquery
5) Rest
6) Spring boot
7) Design patterns
8) Core java 8-9-10
9) Boot Strap
10) html5 and css3
11) Mean development
	Udemy:-Angular & NodeJS - The MEAN Stack Guide
	Autho
TO BE

11) Type script
12) Nodejs
13) Angular js
14) express
15) Brackets
16) Atoms
==========================
1) Core Java
2) Design Pattern
3) Jquery or boot strap
4) English
5) Spring

1) Typejs or boot strap
2) Nodejs or html css
3) AWS
4) English
5) Spring
Spring Security
/**
* Create Spring Security Initializer
* Create Spring Security Configuration (@configuratio)
* Add Users, Passwords and Roles
**/
===============Udemy Courses
1)  Udemy: Data Structure (May)
2)  Udemy: Spring Tutorial (May)
3)  Udemy: The Complete JavaScript Course 2018: Build Real Projects!  26.5 hours
4)  Udemy: Build Responsive Real World Websites with HTML5 and CSS3 12 hours
5)  Udemy: Bootstrap 4 From Scratch With 5 Projects 11.5 hours
6)  Udemy: Understanding TypeScript:  7 hours
7)  Udemy: Multithreading and Parallel Computing in Java:(June)
8)  Udemy: The Complete Node.js Developer Course (2nd Edition)(June) 26.5 hours
9)  Udemy: Angular & NodeJS - The MEAN Stack Guide   (June27 -June29) 21 hours
10) Udemy: Java Design Patterns and Architecture(June) 4.5 hrs

================== Complexity
RunTime Complexities
1) Describes the performance of any Algorithm or Solution.
2) How Much processing power/time required when we double the input.
=============================
1) Constant Time O(1) -> No matter how many items we are working with, the algorithm/operation/whatever
will always takes the same amount of time to execute the algorithm.

2) Logarithmic time log(n) -> You have this if doubling the number of elements your are iterating over,
does not double the amount of work.
Always assume that searching algo are log(n) So log right here stands for logarithm.
It's like you know the math term taking the logarithm of a number we have.
So searching through a sorted array of data we can always assume that might take an algorithm that
runs with logarithmic time and that's an important assumption especially as we start to try to calculate
the runtime of different algorithms.

3) Linear Time n or O(n) -> Iterating through all elements in a collection of data.
if you see a for loop spinning through 0 to array.length, you probably have 'n' or linear runtime.

4) Quaslinear Time n*log(n) -> u have this if doubling the number of elements your are iterating over,
does not double the amount of work.
Always assume that any sorting operation is of n*log(n)

5) Quadratic Time n^2 or O(n^2)-> Every element in a colletion has to be compared to every other element.
The handshake problem.

So each additional element that we add to a given collection has to touch or somehow iterate over or
somehow deal with every other element in the collection.

6) Exponential Time 2^n -> if you add a single element to a collection, the processing power required doubles.
quite of worst case
###################################Identifying runtime complexities

1) Iterating with a single for loop with a single collection ==> Probably O(n)
2) Iterating through half a collection => Still O(n) there are no constants in runtime
3) Iterating through two different collections with separate for loop => O(n + m)
4) Two nested for loops iterating over the same collection => O(n^2)
5) Two different for loops, iterating over different collections => O(n*m)
6) Sorting => O(n*log(n))

############################
1) Linear runtime or N runtime: There is direct relationship between the number of inputs and the amount of time required for 
processing. eg. for string reversal  we had to do one additional unit of work for each character that was added into the input we would have
a linear runtime because there was a one to one relationship between the amount of work we do and the input set.
eg. string reversal

2) N^2 or Quadratic runtime complexity:
So when you have to do N times and things we would refer to this as an N squared runtime complexity
or a quadratic runtime so we'd get these kind of different terminology for identifying or runtime.
if n increacesd by 1, we have to do way, way more stuff, or (n*n) more things total
This would be N^2 or Quadratic runtime then for the steps algorithm we had said that each additional piece of input that we got or
each increment to it I should say in this case meant we had to do and square more things so we had to
do significantly more work.
Each time our input increased.
Eg. Steps Algorithm
=======================
Space Complexity
How much more memory is required by doubling the problem set?
===============================================================
In this video we're going to take a break from writing code and we're going to talk about a slightly
more soft question.When I say soft I mean a question that doesn't really involve code and it's a lot more about your ability
to communicate with your interviewer. So let's take a look at what the question is.
All right. How would you design Twitter.
Sometimes you'll see alternate.
This question might be something like How would you design Uber or design eBay or any of a number of
different services because this question can be asked about many different services.
I'm going to use this video to give you some general strategies on how to answer this question.
So we're not going to focus exactly on giving you a exact word for word answer on how to design Twitter.
We're going to instead focus on some of the details of the question and try to focus on exactly what
your interviewer wants to hear from you.
So that in mind let's take a look at some high level nodes around this question.
So some things to keep in mind around this question.
The first and most important thing to understand is that there is no right answer to these questions
whatsoever.
There's no right answer.
Products like eBay and uber and Twitter they're all built by hundreds if not thousands of different
engineers.
And so it would be pretty naive to think that we could get a concrete definition of exactly how to build
Twitter in the 10 to 20 minutes that you'll have to answer this question.
So they're not looking for the exact blueprint on exactly how you would put Twitter together.
Your interviewer is much more looking at exactly how you communicate what you're trying to say and exactly
what areas you are focusing on when you're answering the question.
So with that in mind that leads us to the second point here which is the second most important point
and that is that every single interviewer who ever asked you this question are always going to expect
be expecting to hear different things so.
INTERVIEWER A at one company is going to want to hear about how you would identify challenges in the
product and then maybe interviewer B would want to hear about how you would scale out the product
for hundreds of thousands or millions of users. So every single interviewer wants to hear a slightly different answer.
It's going to be up to you to figure out exactly what to focus on now an easy way to figure out what
area to focus on in a given product is to simply ask your interviewer. You can simply say to them hey this product Twitter 
has many different features involved in it. Is there some particular area that you want me to focus on now.
Very commonly your interviewer will simply respond. No just give it your best shot.Tell me what comes to mind.
But it's at least worth trying to ask that question in gleem a little bit more information out of them.
Now they don't mind if your interviewer does not give you any particular area to concentrate on at all.
Usually a good place to start concentrating on is the data model and when I say data model I'm talking
about how you build out a database to reflect all the information for the given product.
So in the case of Twitter you might focus on how you would store tweets in the database or how you would
store users in the database.
Again this is a question that really depends upon some amount of experience.
So if you do not have experience working with a database or architecting out records in the database
Well you enforce and that's kind of what the question is trying to root out here.
If you don't have experience with databases like that then it's always possible for you to try to pivot
the discussion over to areas that you are familiar with.
So for example you might try to talk a lot more about how the web user interface should be put together.
Now I really recommend that you not focus on just spouting off different frameworks or different technologies
that you would use. So a very poor way to answer this question.
I really recommend you never do this do not answer the question by simply saying well I would probably
use react in redux and Node and express. That's not what your interviewer wants to hear.
Anyone can pick out a list of different technologies.
What they're trying to get out of you when they ask this question is why you would pick a particular
technology. So a much better way of answering this or addressing the different technologies would be to say something
like Well I would probably decide to use a web framework on the front end. Here are the requirements of such a framework.
I would need something that could easily render out a list of tweets and maybe it would be a framework
that would have to work very well in mobile if I expected my users to access this page frequently from
a mobile device.
So don't just list out the technologies list out the qualities or the attributes of a particular framework
that you want to use.Do not just say I would use react.That is not what your interviewer is looking for.
The next tip I recommend here it is to draw stuff out. Draw a diagram draw. Maybe the main web application interface in the case of Twitter.
That's a great example or something like Uber. Draw out the mobile screen live the way.
What a user sees when they're trying to find a right that will help guide the discussion and will also
help make sure that you understand the product that you're trying to build.
If you've never used Twitter before well answering a question about how would you design Twitter might
be really challenging.
So you could start off by drawing out a diagram of the main user interface and if you don't really understand
how Twitter is put together or how it works that could be an opportunity for your interviewer to correct
you and say oh just you know Twitter really revolves around say the user feed or something like that.
So drawing out diagrams really helps communicate your knowledge of the actual product and will help
your interviewer kind of guide you if they're going to give you any guidance at all.
Now finally this is bar none the most important thing to keep in mind about this question.
Talk communicate.
This question is not about your interviewer trying to get some insight on how to build Twitter.
Like they're not sitting there taking down notes and saying oh this is priceless stuff I'm going to
go home and build out Twitter thanks to what this person is saying this person is asking you this question
because they want to gauge your ability to communicate complicated topics.
So above all talk and voice what you're thinking.
Don't sit there and say oh well I'm organizing my thoughts.
Give me 30 seconds.
That leads to a lot of very uncomfortable silence as soon as you as your interviewer asks you this question
respond and give an instant follow up question say something like OK you want me to do Twitter.
Was there a particular area that you want me to focus on.
You instantly respond back to them and start talking and try to get some more insight as to what's going
on is going on or at least give them some idea of what you are thinking.
OK.
So that's my help.
High-Level notes.
Now we're going to pivot a little bit and I'm going to give you one possible strategy that you can use
to answer any type of question like this.
Any type of question like How would you design Twitter or eBay or Facebook or whatever it might be.
All right so here's the general strategy.
So this is a strategy that I recommend it might work it might not always be exactly what your interviewers
looking for but it's definitely a place to start.
So the first thing that I do with this question because I have personally been asked this question many
times.
I usually start off by identifying two or three core features in the product.
So to do this first thing right here this is where drawing out a diagram of the core user interface
is really helpful.
So if I was asked how would you build Twitter.
I would probably build out or draw out a very quick sketch like this on the white board.
So you don't have to be this detailed but at least you know for the purposes of this lecture and this
course I decided to put a lot of detail in here.
But I would least probably put on some boxes and say here are were some trending tweets go.
Here's where the user feed is.
Here is a list of suggestions on who to follow.
And then there is a moment feature there's notifications there's messages and of course my ability to
tweet.
So I would probably look at this diagram right here and I would say I want to pick out two core features
of this product have to focus on.
And so for me I might say I want to focus on exactly how tweeting works like how does it work.
How does a user create a tweet.
What happens when they create a tweet and then I might also decide to focus on the user feed and start
to think about how that user feed is put together.
And so I would identify these two core features and start to think about possible ways of implementing
them.
So that would be everything from the web interface.
So when the user clicks on that tweet button what should really happen.
And then also think about what happens when we send a request to back and server to create a new tweet.
Again this is where we start to think about some of the database implementations maybe we have to think
about exactly what fields a tweet and the database has this very quickly leads into your ability to
identify and address different difficulties around those two features.
So in the case of let's say writing a tweet and also showing a user or a user fee or a feed of different
tweets that are very popular I would start to very quickly think about some of the big challenges around
implementing both of those features.
So in the case of tweeting I would think to myself What does a tweet look like in the database.
I would think about how do we make the hash tag topic's system work and the mentioned system work.
What would be some possible implementations around those.
And then finally I might think about how would we implement read tweets on the case of putting together
a feed.
I would start to ask myself what's the biggest challenge there.
Well the biggest challenge is probably deciding what what Tweed's to show to a user like are the most
interesting or the most popular tweets that we want to surface to a user when they first log into the
product.
So again this is really just going through the process of trying to identify and address big challenges
around building a particular feature.
Remember that is the real goal of this question.
Your interviewer wants to see your ability to figure out and address different challenges before youre
actually implementing the product.
That's what this question is all about again is testing your experience with building software.
Now the very last thing here and this is usually where all of these design questions lead to inevitably
no matter how well you ask.
The answer these first three items right here inevitably your interviewer is probably going to say okay
that sounds good.
Now lets think about how this product would work or how those two features would work.
Once we start getting hundreds of thousands or millions of users.
And so that inevitably is the question about scaling out your product.
So for this this is an area where it would be really unfair for your interviewer to expect you to give
a very concrete answer of oh well I would do this this and this and here are absolute concrete step
by step ways that I would scale out the product.
Instead I really recommend you start thinking about some general strategies for how you would scale
out products in general.
And so two possible ways of addressing scaling for additional users would be to mention something about
caching data or caching requests from the database or data from the database.
And then also think about some general ways in which we can address the overall server server architecture
to make sure that we could scale it out for additional users.
So this is one area that I want to give you just a little bit more detail on than some of the other
areas that we've been talking about.
So I first want to talk about caching a little bit again.
Caching is something that can be applied to just about every single product out there.
So if you've never worked with caching before I really recommend maybe reading a quick blog post or
two about how you would cache data in general.
So the general idea here is that maybe a user comes to our server and they say hey I want to get my
tweet feed like give me my feed of top tweets.

Let's imagine for a second that that feed is very computationally expensive to put together like it
takes a full second to decide what tweets to show to the user.
And so if we are starting to get millions of different users who are accessing our server at the same
time building out that feed of tweets for every single request that comes in could get really expensive
really quickly.
So one possible way of addressing that is to say that for some particular user like user ABC when they
first come to our server maybe we will get a list of tweets out of our database and we will run some
really expensive algorithm on the server to calculate this user's feed like calculate the top 10 tweets
that we want to show this user and then we could send those 10 tweets back to the user and then simultaneously
also take that top 10 list of tweets and store it in some memory store like memcache or redness or whatever
it might be.
Then any time that this same user comes back like lets say in the next five minutes or something rather
than going back to the database and pulling out our base list of tweets again and running that expensive
algorithm again maybe we just go right back to that memory store pull out the previous feed that we
had just calculated and send it back to the user.
And so this is the idea of caching doing some expensive work one time storing the result and then reusing
that result as soon as we need to recalculate it again.
Again the idea of caching can be used in just about every single one of these design questions.
So I really recommend you brush up on caching a little bit for the purposes of answering this.

Now the other easy way to answer the scaling question is to talk about deployment options or deployment
architecture.And so this is another area where it usually comes down to one very solid concrete answer.
We could say that for a given user maybe we are not able to satisfy a million different users with a
single machine running our server so 8 easy way to approach this would be to say that we are going to
create a load balancer whenever a user makes a request to our application.
It will go to this load balancer and then the load balancer will be randomly assigned that request to
any one of a number of different identical servers.
And so we can have many different servers that are completely invisible to the user and any one of those
servers can handle a given request and respond back.
And so this would be an example of horizontal scaling for our application.
This is another area where it's really easy to just memorize this general idea of a load balancer.
And then it's applicable to just about every single one of these design questions out there.
Okay.
So that is a high level overview of the classic how to design Twitter question.
Again the big things to keep in mind here are that the question are trying is trying to.
is trying to assess your experience with building products.
The interviewer wants to hear your experience and how you address the problem and its not quite so important
that you nail the actual implementation.
They are much more interested in seeing what you spend time on and what you start to think about as
soon as you are asked this question.
So as soon as possible you want to start identifying different problems because that is showing your
ability as an engineer to think ahead and anticipate problems before they come up which is obviously
really important in a job environment.
All right.
========================================================
Spring:
========================================================
Spring Container

1) Primary functions
	-Inversion of control: Create and Manage Objects
	-Dependeny Injection: Inject Object's dependencies

	How to configure the Spring Dispatcher Servlet using all Java Code (no xml)?

Answer:
The Spring documentation covers this process:
https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#mvc-container-config

====================================================================================================
Steps to free port which is already used to run tomcat server in Eclipse
For example , suppose 8080 port is used , we need to make free 8080 to run tomcat
Step 1: (open the CMD command)
C:\Users\username>netstat -o -n -a | findstr 0.0:8080
TCP 0.0.0.0:3000 0.0.0.0:0 LISTENING 3116
Now , we can see that LISTENING port is 3116 for 8080 ,
We need to kill 3116 now
Step 2:-
C:\Users\username>taskkill /F /PID 3116
Step 3: Go to Eclipse and start Server , it will run
===================================
1) Spring questions
2) Design patterns and patterns used in pring
3) differenc between controller and restcontroller
4) How do u secure rest services

====================Date 18 Sept
LinkList--------
1) insertAt()
2) RemoveAt
3) Midpoint
4) Generators
----------------------------
Date-Spet-20

1) Basic Multithreading
	1) Sequential Processing
		-Create two class with methods to print the count from 0-10 and see the behaviour
		-Call those methods
	2) Runnable ex
		-Create two runable classes with run methods to print 1-10.
		-Create two separate threads and start them, see the behavior.
	3) Thread ex
	4) Join ex
	5) Volatile
	6) Deadlock
	7) synchronize
	8) wait notify
	9) producer-consumer
	10) Locks
		-Rentrant Locks
		-conditions
		
	11) Synchronization vs locks
	12) Semaphores
	13) Executors
	14) Callbales
	15) Future
		
2) Fork-Join
	1) fork join
	2) maximum finding
	3) merge sort
	4) task
	
3) MapRedue
	1) example
	2) map reduce vs fork join
4) Parallel algorithms
	1) merge sort sequential
	2) merge sort parallel
	3) Sequential sum
	4) parallel sum

5) Concurrent Collections
	1) Priority Queue
	2) Blocking Q	
	3) Latches
	4) Cyclic Barriers
	5) Delayed Q
	6) Concurrent Map
	7) Exchanger
Apps
1) Dining philosopher
2) Library Simulation
3) MinerGame

How to secure rest services
Spring boot Architecture
How to customize the response type for rest services
---------------------------==========================
=========================----------------------------
1-888-986-7944

EAR => amazon.in
difference between continuous delivery and continuous deployment
continuous delivery => upto UAT delivered but not deployed to prod
what is blue print container

what is K8s
for containorization we use docker and k8s
difference between image and container
image is nothing but jar file, when it is running its a container
CVS
centralized version control
	problem: everyone is writing to here just like google drive, if file is deleted what will
	happen.
	
DVCS:distributed version control system.
=============================================

